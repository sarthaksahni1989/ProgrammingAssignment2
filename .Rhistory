?numeric
?numeric()
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y,[,i])
}
means
}
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y,[, i])
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y,[, i], na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
mydata <- rnorm(100)
sd(mydata)
sd(x = mydata)
sd(x = mydata, na.rm = FALSE)
sd(na.rm = FALSE, x = mydata)
sd(na.rm = FALSE, mydata)
sd(mydata, na.rm = FALSE)
f <- function(a,b) {
print(a)
print(b)
}
f(45)
f <- function(a,b = 65) {
print(a)
print(b)
}
f(20)
args(paste)
function(..., sep = " ", collapse = NULL)
paste("a", "b", sep = ":")
paste("a", "b", sep = ":")
search()
search(library)
search(lm)
f <- function(x,y,z)
{
x + y/z
}
f(3,4,2)
z <- 8
a <- 2
fxy <- function(x,y)
{
x/y + z
}
f(4,2)
make.power <- function(n)
{
pow <- function(x) {
x + n
}
pow
}
make.power(3)
3
cube <- make.power(3)
add <- make.power(2)
cube(3)
make.power <- function(n)
{
pow <- function(x) {
x * n
}
pow
}
first <- make.power(3)
produ <- make.power(4)
first(2)
first(6)
produ(3)
ls(environment(first))
get("n",environment(first))
x <- as.Date("1970-01-01")
x
x
p <- as.POSIXlt(x)
p$wday
?strptime
x <- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
x <- matrix(rnorm(200), 20, 10)
apply(x, 2, mean)
x <- matrix(rnorm(200), 20, 10)
apply(x, 2, mean)
mapply(rep, 1:4, 4:1)
noise <- function(n,mean,sd)
{
rnorm(n,mean,sd)
}
noise(5,1,2)
mapply(noise, 1:5, 1:5, 2)
?gl
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
lapply(s,function(x) colMeans(x[, c("Ozone","Solar.R","Wind")]))
lapply(s,function(x) colMeans(x[, c("Ozone","Solar.R","Wind")], na.rm = TRUE))
sapply(s,function(x) colMeans(x[, c("Ozone","Solar.R","Wind")], na.rm = TRUE))
x <- rnorm(10)
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1,f2)
?invisible
str(str)
str(ls)
str(rnorm)
library(datasets)
head(airquality)
str(airquality)
s <- split(airquality, airquality$Month)
str(s)
str(dnorm)
set.seed(1)
rnorm(6)
rnorm(6)
set.seed(1)
rnorm(6)
set.seed(1)
sample(1:10,4)
x <- vector("numeric",length = 10)
x
y <- c(1.7,"a")
y
x <- list(1,"a",TRUE,1+4i)
x
x <- list(1:10,"a",TRUE,1+4i)
x
x <- factor(c("yes","no","yes","yes"))
x
table(x)
unclass(x)
x <- list(foo = 1:4, bar = 0.6)
x
x <- list(foo = 1:4, bar = 0.6)
x$foo
x[foo]
x[1]
x["foo"]
x <- matrix(1:6,2,3)
x
x[1,2]
x[2,1]
x[1,]
x[,2]
x <- list(2,"a","b",TRUE)
x[[2]]
x <- 1:4
y <-2
x+y
x <- 10
if(x < 3) {
y <- 10
}
else {
x <- 10
if(x < 3) {
y <- 10
} else {
y <- 0
}
y
x <- c("a","b","c","d","e")
for (i in seq_along(x)) {
print(x[i])
}
x <- c(1:4)
for (i in seq_along(x)) {
print(x[i])
}
x <- matrix(1:6,2,3)
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x))) {
print(x[i,j])
}
}
count <- 0
while(count < 10) {
print(count)
count <- count + 1
}
?rbinom()
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1,1,0.5)
if(coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1,1,0.5)
if(coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
x0 <- 1
tol <- 1e-8
x0 <- 1
tol <- 1e-8
repeat {
x1 <- computeEstimate()
if(abs(x1 - x0) < tol) {
break
} else {
x0 <- x1
}
}
x0 <- 1
tol <- 1e-8
repeat {
x1 <- computeEstimate()
if(abs(x1 - x0) < tol) {
break
} else {
x0 <- x1
}
}
add2 <- function(x,y) {
x + y
}
add(2,3)
add2(2,3)
above <- function(x,n) {
use <- x > n
x[use]
}
x <- 1:20
above(x,10)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
sample <- matrix(1:10,5,2)
coulmnmean(sample)
columnmean(sample)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
make.power <- function(n) {
pow <- function(x) {
x^n
}
}
cube <- make.power(3)
square <- make.power(2)
cube(4)
square(6)
Sys.time()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 4
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
mapply(rep, 1:4, 4:1)
library(datasets)
data(iris)
?iris
head(iris)
lapply(iris, function(x) colMeans(x[,"Sepal.Length"]))
s <- iris
apply(s, 2, mean)
s <- data(iris)
apply(s, 2, mean)
colMeans(iris,dims = 2)
colMeans(iris,dims = "Sepal.Length")
data(iris)
mean(iris[["Petal.Length"]])
data(iris)
mean(iris[["Sepal.Length"]])
data(iris)
library(datasets)
data(iris)
head(iris)
<- split(iris, iris$Species)
lapply(s, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
s <- split(iris, iris$Species)
lapply(s, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
apply(iris, 2, mean)
colMeans(iris)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
library(datasets)
data(mtcars)
s1 <- split(mtcars, mtcars$cyl)
lapply(s, function(x) colMeans(x[, c("mpg")]))
s1 <- split(mtcars, mtcars$cyl)
lapply(s1, function(x) colMeans(x[, c("mpg")]))
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
split(mtcars, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
s1 <- split(mtcars, mtcars$cyl)
sapply(s1, function(x) colMeans(x[, c("mpg","hp")]))
s1 <- split(mtcars, mtcars$cyl = 4)
debug(ls)
ls
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for(i in id) {
dat <- rbind(dat,read.csv(files_full[i]))
}
mean(dat[, pollutant], na.rm = TRUE)
}
directory <- "/Users/sarthaksahni/Downloads/specdata"
pollutantmean(directory, sulfate, id = 1:10)
directory <- "/Users/sarthaksahni/Downloads/specdata"
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for(i in id) {
dat <- rbind(dat,read.csv(files_full[i]))
}
mean(dat[, pollutant], na.rm = TRUE)
}
pollutantmean(directory, sulfate, id = 1:10)
directory
directory <- "/Users/sarthaksahni/Downloads/specdata"
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for(i in id) {
dat <- rbind(dat,read.csv(files_full[i]))
}
mean(dat[, pollutant], na.rm = TRUE)
}
pollutantmean(directory, sulfate, id = 1:10)
directory <- "/Users/sarthaksahni/Downloads/specdata"
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for(i in id) {
dat <- rbind(dat,read.csv(files_full[i]))
}
mean(dat[, pollutant], na.rm = TRUE)
}
pollutantmean(directory, sulfate, id = 1:10)
pollutantmean(directory, sulfate, id = 1:10)
complete <- function(directory, id = 1:332) {
##List all the files in the directory
files_full <- list.files(directory, full.names = TRUE)
##Create an empty data frame
dat <- data.frame()
for (i in id) {
##Read from the csv files
read_files <- read.csv(files_full[i])
##Calculate the sum of complete cases
comp_cases <- sum(complete.cases(read_files))
##Creates a data frame with the file name
tmp <- data.frame(i,comp_cases)
dat <- rbind(dat, tmp)
}
colnames(dat) <- c("id", "comp_cases")
}
complete(directory = "/Users/sarthaksahni/Desktop/specdata", id = 1)
complete <- function(directory, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in id) {
moni_i <- read.csv(files_full[i])
nobs <- sum(complete.cases(moni_i))
tmp <- data.frame(i, nobs)
dat <- rbind(dat, tmp)
}
colnames(dat) <- c("id", "nobs")
dat
}
complete(directory = "/Users/sarthaksahni/Desktop/specdata", id = 1)
complete <- function(directory, id = 1:332) {
##List all the files in the directory
files_full <- list.files(directory, full.names = TRUE)
##Create an empty data frame
dat <- data.frame()
for (i in id) {
##Read from the csv files
read_files <- read.csv(files_full[i])
##Calculate the sum of complete cases
comp_cases <- sum(complete.cases(read_files))
##Creates a data frame with the file name
tmp <- data.frame(i, comp_cases)
dat <- rbind(dat, tmp)
}
complete <- function(directory, id = 1:332) {
##List all the files in the directory
files_full <- list.files(directory, full.names = TRUE)
##Create an empty data frame
dat <- data.frame()
for (i in id) {
##Read from the csv files
read_files <- read.csv(files_full[i])
##Calculate the sum of complete cases
comp_cases <- sum(complete.cases(read_files))
##Creates a data frame with the file name
tmp <- data.frame(i, comp_cases)
dat <- rbind(dat, tmp)
}
colnames(dat) <- c("id", "comp_cases")
}
complete(directory = "/Users/sarthaksahni/Desktop/specdata", id = 1)
complete <- function(directory, id = 1:332) {
##List all the files in the directory
files_full <- list.files(directory, full.names = TRUE)
##Create an empty data frame
dat <- data.frame()
for (i in id) {
##Read from the csv files
read_files <- read.csv(files_full[i])
##Calculate the sum of complete cases
comp_cases <- sum(complete.cases(read_files))
##Creates a data frame with the file name
tmp <- data.frame(i, comp_cases)
dat <- rbind(dat, tmp)
}
colnames(dat) <- c("id", "comp_cases")
dat
}
complete(directory = "/Users/sarthaksahni/Desktop/specdata", id = 1)
complete(directory = "/Users/sarthaksahni/Desktop/specdata", id = 1)
complete(directory = "/Users/sarthaksahni/Desktop/specdata", id = 1)
complete(directory = "/Users/sarthaksahni/Desktop/specdata", id = 1)
complete(directory = "/Users/sarthaksahni/Desktop/specdata", id = 1)
complete(directory = "/Users/sarthaksahni/Desktop/specdata", id = 1)
